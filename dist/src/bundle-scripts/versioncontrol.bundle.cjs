/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => {
  // webpackBootstrap
  /******/ "use strict";
  /******/ var __webpack_modules__ = {
    /***/ "./dist/src/scripts/versioncontrol.js":
      /*!********************************************!*\
  !*** ./dist/src/scripts/versioncontrol.js ***!
  \********************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        eval(
          '__webpack_require__.r(__webpack_exports__);\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\nvar imagesposition = [];\ndocument.addEventListener("DOMContentLoaded", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n  var document_version, response, htmljson, fileInput, convertDocxToBlob, _convertDocxToBlob, extractParentText, removeTagButKeepChildren, extractHtmlToJson, contentdocument, renderDocx, _renderDocx, buttondd, isIdInJson, applyChangesFromV1toV2, applyChangesFromV2toV1, _applyChangesFromV2toV, v2tov1;\n  return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n    while (1) switch (_context6.prev = _context6.next) {\n      case 0:\n        _applyChangesFromV2toV = function _applyChangesFromV2to2() {\n          _applyChangesFromV2toV = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(divElement, v1, v2, firstv) {\n            var response2;\n            return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n              while (1) switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return fetch("http://localhost:5001/api/file/getFile/4", {\n                    method: "GET",\n                    headers: {\n                      "Content-Type": "application/json"\n                      // Authorization: "Bearer " + token,\n                    }\n                  }).then(function (response) {\n                    return response.json();\n                  }).then(function (data) {\n                    // Handle the response from the backend\n                    // console.log(data.data.data);\n                    document.getElementsByClassName("docx-wrapper")[0].innerHTML = data.data.data;\n                    htmljson = data.data.htmljson;\n                  });\n                case 2:\n                  response2 = _context5.sent;\n                  imageLoaded();\n                case 4:\n                case "end":\n                  return _context5.stop();\n              }\n            }, _callee5);\n          }));\n          return _applyChangesFromV2toV.apply(this, arguments);\n        };\n        applyChangesFromV2toV1 = function _applyChangesFromV2to(_x4, _x5, _x6, _x7) {\n          return _applyChangesFromV2toV.apply(this, arguments);\n        };\n        applyChangesFromV1toV2 = function _applyChangesFromV1to(divElement, v1, v2, firstv) {\n          for (var tagid in v2.newTags) {\n            console.log(tagid, "newtags");\n            console.log(v2.newTags[tagid], "tapasvai");\n            console.log(!isIdInJson(v2.newTags[tagid].id, firstv.newTags, v2.newTags[tagid].tagName), "isid");\n            if (v2.newTags[tagid]) {\n              // console.log(`#${v2.newTags[tagid].parentId}`);\n              var tag = document.getElementById(v2.newTags[tagid].parentId);\n              var childElement = document.createElement(v2.newTags[tagid].tagName);\n              childElement.textContent = v2.newTags[tagid].textContent;\n              console.log(childElement.textContent);\n              childElement.style = v2.newTags[tagid].style;\n              childElement.className = v2.newTags[tagid]["class"];\n              console.log(v2.newTags[tagid].textContent, "textContent");\n              childElement.id = v2.newTags[tagid].id;\n              childElement.color = v2.newTags[tagid].color;\n              childElement.size = v2.newTags[tagid].size;\n              childElement.face = v2.newTags[tagid].face;\n              // childElement.children = v2.newTags[tagid].children;\n              console.log("eye", v2.newTags[tagid].children);\n              if (v2.newTags[tagid].children.length > 0) {\n                for (var i = 0; i < v2.newTags[tagid].children.length; i++) {\n                  var child = document.getElementById(v2.newTags[tagid].children[i]);\n                  if (child) {\n                    var x = child;\n                    child.remove();\n                    childElement.appendChild(x);\n                    console.log("eye", child);\n                  }\n                }\n              }\n              console.log(tag);\n              console.log(v2.newTags[tagid].parentId);\n              var children = tag.childNodes;\n              var position = v2.newTags[tagid].childnodeposition;\n              console.log(tag);\n              console.log(childElement);\n              console.log("position", position, children, children.length, position >= 0 && position <= children.length, childElement, "ipvms");\n              if (position == 0 && children.length == 1 && children[0].nodeType == 3) {\n                var newtext = children[0].textContent.replace(childElement.textContent, "").replace(v2.newTags[tagid].textbefore, "");\n                var newchildbefore = document.createTextNode(v2.newTags[tagid].textbefore);\n                tag.insertBefore(newchildbefore, children[0]);\n                tag.removeChild(children[1]);\n                children[0].nodeValue = newtext;\n                console.log(children, "exsq");\n              } else {\n                if (position > children.length) {\n                  console.log("archit");\n                  if (tag.childNodes.length > 0 && tag.childNodes[children.length - 2] && tag.childNodes[children.length - 2].nodeName === "#text") {\n                    console.log(v2.newTags[tagid]);\n                    var _newtext = children[children.length - 2].nodeValue.replace(childElement.textContent, "");\n                    _newtext = _newtext.replace(v2.newTags[tagid].textbefore, "");\n                    console.log(_newtext, "vvv");\n                    var _newchildbefore = document.createTextNode(v2.newTags[tagid].textbefore);\n                    var newchildafter = document.createTextNode(v2.newTags[tagid].textafter);\n                    console.log(newchildafter, _newchildbefore);\n                    tag.insertBefore(_newchildbefore, children[children.length - 1]);\n                    tag.insertBefore(newchildafter, children[children.length - 1]);\n\n                    // children[0].nodeValue = newtext;\n                    tag.removeChild(children[position - 1]);\n                    console.log(children, "exsq");\n                  } else {\n                    tag.appendChild(childElement);\n                  }\n                } else if (position - 1 > 0 && position + 1 < children.length) {\n                  if (tag.childNodes[position - 1].nodeName === "#text" && tag.childNodes[position + 1].nodeName === "#text") {\n                    tag.removeChild(tag.childNodes[position]);\n                    console.log("yeeeeeee");\n                  }\n                } else if (position + 1 <= children.length - 1) {\n                  if (tag.childNodes[position + 1].nodeName === "#text") {\n                    tag.removeChild(tag.childNodes[position]);\n                    console.log("yeeeeeee");\n                  }\n                } else if (position - 1 > 0 || position == children.length) {\n                  console.log("vishal", tag.childNodes, "position", position);\n                  if (tag.childNodes.length > 0 && tag.childNodes[position - 1].nodeName === "#text") {\n                    console.log(v2.newTags[tagid]);\n                    var _newtext2 = children[position - 1].nodeValue.replace(childElement.textContent, "");\n                    _newtext2 = _newtext2.replace(v2.newTags[tagid].textbefore, "");\n                    console.log(_newtext2, "vvv");\n                    var _newchildbefore2 = document.createTextNode(v2.newTags[tagid].textbefore);\n                    var _newchildafter = document.createTextNode(v2.newTags[tagid].textafter);\n                    console.log(_newchildafter, _newchildbefore2);\n                    tag.insertBefore(_newchildbefore2, children[position]);\n                    tag.insertBefore(_newchildafter, children[position + 1]);\n\n                    // children[0].nodeValue = newtext;\n                    tag.removeChild(children[position - 1]);\n                    console.log(children, "exsq");\n                  } else {\n                    tag.appendChild(childElement);\n                  }\n                } else if (position === children.length - 1) {\n                  tag.removeChild(tag.childNodes[position]);\n                  console.log("ye3");\n                }\n              }\n              if (position >= 0 && position <= children.length) {\n                console.log(position, children.length, tag.childNodes);\n                if (position === children.length) {\n                  // If position is at the end, simply append the child\n                  tag.appendChild(childElement);\n                } else {\n                  // Otherwise, insert the child before the element at the specified position\n                  // let sp2 = document.getElementById(children[childnodeposition].id);\n                  console.log("Inserting");\n                  tag.insertBefore(childElement, tag.childNodes[position]);\n                }\n              } else {\n                tag.appendChild(childElement);\n              }\n            }\n            console.log(childElement.childNodes, "childelement", isIdInJson(v2.newTags[tagid].id, firstv.newTags, v2.newTags[tagid].tagName), childElement.childNodes, childElement.childNodes.length);\n            if (isIdInJson(v2.newTags[tagid].id, firstv.newTags, v2.newTags[tagid].tagName) == false && childElement.childNodes && childElement.childNodes.length > 0) {\n              childElement.classList.add("greenhighlight");\n            }\n          }\n          console.log(v1);\n          for (var tagId in v2.changedTags) {\n            console.log(tagId, "d");\n            if (v2.changedTags[tagId].id) {\n              var tagInfo = v2.changedTags[tagId];\n              console.log(v2.changedTags[tagId].id);\n              var _tag = document.getElementById(v2.changedTags[tagId].id);\n              console.log("tag: " + _tag);\n              if (!_tag) continue;\n\n              // Apply cges to text content and style\n              if (_tag) {\n                if (isIdInJson(v2.changedTags[tagId].id, firstv.changedTags, "a") == false) {\n                  console.log(v2.changedTags[tagId].textContent, "text text text");\n                  _tag.classList.add("bluehighlight");\n                }\n                if (v2.changedTags[tagId].style) {\n                  _tag.style = v2.changedTags[tagId].style;\n                }\n                if (v2.changedTags[tagId].textContent) {\n                  _tag.textContent = v2.changedTags[tagId].textContent;\n                  // tag.style = tag.style + "border : 1px  red solid;";\n                }\n                // //\n                //           tag.textContent = v2.changedTags[tagId].textContent;\n                // if (tag.textContent !== "") {\n                //   tag.style =\n                //     v2.changedTags[tagId].style + "border : 1px  red solid;";\n                // } else {\n                //   tag.style = v2.changedTags[tagId].style;\n                // }\n\n                _tag.className = _tag.className;\n                console.log(_tag);\n              }\n\n              // Apply changes to image source\n              if (tagInfo.isTagImg && v2[tagId]) {\n                _tag.src = v2[tagId].src;\n              }\n            }\n          }\n          for (var _tagid in v2.removedTags) {\n            console.log(_tagid, "removedtags");\n            console.log();\n            if (v2.removedTags[_tagid]) {\n              var _tag2 = document.getElementById(v1[v2.removedTags[_tagid]].id);\n\n              //  tag.parentElement.classList.add("redhighlight");\n              console.log("tag: " + _tag2);\n              if (_tag2) {\n                if (isIdInJson(v2.removedTags[_tagid].id, firstv.removedTags, "a") == false && _tag2.textContent !== "") {\n                  var removedelement = document.createElement("p");\n                  removedelement.classList.add("redhighlight");\n                  _tag2.parentElement.insertBefore(removedelement, _tag2);\n                  console.log(_tag2.id, "removed");\n                  console.log(_tag2.parentElement, "remove remove remove");\n                  console.log(v2.removedTags[_tagid].textContent, "text text text");\n                  if (_tag2.parentElement.tagName.toLowerCase() !== "article") {\n                    _tag2.parentElement.classList.add("redhighlight");\n                  }\n                }\n                if (_tag2 != null) {\n                  _tag2.remove();\n                }\n              } else {\n                continue;\n              }\n            }\n          }\n          for (var image in v2.imageTags) {\n            console.log(v2.imageTags[image]);\n            var _tag3 = document.getElementById(v2.imageTags[image].id);\n            if (!_tag3) {\n              var parent = document.getElementById(v2.imageTags[image].parent);\n              var img = document.createElement("img");\n              img.src = v2.imageTags[image].src;\n              img.style = v2.imageTags[image].style;\n              img.id = v2.imageTags[image].id;\n              img.width = v2.imageTags[image].width;\n              img.height = v2.imageTags[image].height;\n              img.x = v2.imageTags[image].x;\n              img.y = v2.imageTags[image].y;\n              parent.appendChild(img);\n            } else {\n              _tag3.src = v2.imageTags[image].src;\n              _tag3.style = v2.imageTags[image].style;\n              _tag3.id = v2.imageTags[image].id;\n              _tag3.width = v2.imageTags[image].width;\n              _tag3.height = v2.imageTags[image].height;\n              _tag3.x = v2.imageTags[image].x;\n              _tag3.y = v2.imageTags[image].y;\n            }\n          }\n          imageLoaded();\n        };\n        isIdInJson = function _isIdInJson(id, json, tagName) {\n          for (var i = 0; i < json.length; i++) {\n            if (tagName == "tbody") {\n              return true;\n            }\n            if (tagName == "b") {\n              return false;\n            }\n            if (json[i]["id"] === id) {\n              return true;\n            }\n          }\n          return false;\n        };\n        _renderDocx = function _renderDocx3() {\n          _renderDocx = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(file) {\n            var convertImagesToBase64, currentDocument, docxOptions, docData, _docxOptions, tbodyElements, blobToBase64, tags, idCounter, i, id, sections, containerdocx, headers, articles, _response2, response2, container;\n            return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n              while (1) switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.prev = 0;\n                  convertImagesToBase64 = /*#__PURE__*/function () {\n                    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(divId) {\n                      var div, images, i, img, blob, base64;\n                      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                        while (1) switch (_context3.prev = _context3.next) {\n                          case 0:\n                            // Find the div element\n                            div = document.getElementById(divId); // Find all images within the div\n                            images = div.getElementsByTagName("img"); // Iterate over each image\n                            if (!(images.length > 0)) {\n                              _context3.next = 16;\n                              break;\n                            }\n                            i = 0;\n                          case 4:\n                            if (!(i < images.length)) {\n                              _context3.next = 16;\n                              break;\n                            }\n                            img = images[i]; // Create a blob URL for the image\n                            _context3.next = 8;\n                            return fetch(img.src).then(function (response) {\n                              return response.blob();\n                            });\n                          case 8:\n                            blob = _context3.sent;\n                            _context3.next = 11;\n                            return blobToBase64(blob);\n                          case 11:\n                            base64 = _context3.sent;\n                            img.src = base64;\n                          case 13:\n                            i++;\n                            _context3.next = 4;\n                            break;\n                          case 16:\n                          case "end":\n                            return _context3.stop();\n                        }\n                      }, _callee3);\n                    }));\n                    return function convertImagesToBase64(_x8) {\n                      return _ref2.apply(this, arguments);\n                    };\n                  }();\n                  currentDocument = file;\n                  console.log("ffs");\n                  if (currentDocument) {\n                    _context4.next = 17;\n                    break;\n                  }\n                  docxOptions = Object.assign(docx.defaultOptions, {\n                    debug: true,\n                    experimental: true,\n                    ignoreLastRenderedPageBreak: false\n                  });\n                  console.log(docxOptions);\n                  _context4.next = 9;\n                  return convertDocxToBlob();\n                case 9:\n                  docData = _context4.sent;\n                  console.log(document.getElementById("container-content"));\n                  console.log(docData);\n                  console.log(docx);\n                  _context4.next = 15;\n                  return docx.renderAsync(docData, document.getElementById("container-content"), null, docxOptions);\n                case 15:\n                  _context4.next = 23;\n                  break;\n                case 17:\n                  _docxOptions = Object.assign(docx.defaultOptions, {\n                    debug: true,\n                    experimental: true,\n                    ignoreLastRenderedPageBreak: false\n                  });\n                  _context4.next = 20;\n                  return convertDocxToBlob();\n                case 20:\n                  docData = _context4.sent;\n                  _context4.next = 23;\n                  return docx.renderAsync(currentDocument, document.getElementById("container-content"), null, _docxOptions);\n                case 23:\n                  tbodyElements = document.querySelectorAll("tbody"); // console.log("tbody elements: " + tbodyElements.length);\n                  blobToBase64 = function blobToBase64(blob) {\n                    var reader = new FileReader();\n                    reader.readAsDataURL(blob);\n                    return new Promise(function (resolve) {\n                      reader.onloadend = function () {\n                        resolve(reader.result);\n                      };\n                    });\n                  };\n                  convertImagesToBase64("container-content");\n                  tags = document.querySelectorAll(".docx-wrapper *"); // console.log(tags);\n                  idCounter = 1;\n                  tags.forEach(function (tag) {\n                    if (!tag.id) {\n                      tag.id = "id_" + idCounter;\n                      idCounter++;\n                    }\n                  });\n                  tbodyElements = document.getElementsByTagName("tbody"); // console.log("tbody elements: " + tbodyElements.length);\n                  // Loop through each tbody element\n                  for (i = 0; i < tbodyElements.length; i++) {\n                    // Generate a unique ID for each tbody element\n                    id = "tbody_" + i; // Set the id attribute for the tbody element\n                    tbodyElements[i].setAttribute("id", id);\n                  }\n                  sections = document.getElementsByClassName("docx");\n                  console.log(sections);\n                  for (i = 0; i < sections.length; i++) {\n                    console.log("section height chages");\n                    sections[i].setAttribute("style", "padding: 20.15pt 59.15pt 72pt 72pt; width: 595pt; height: 842pt;");\n                  }\n                  containerdocx = document.getElementsByClassName("docx-wrapper")[0];\n                  headers = containerdocx.getElementsByTagName("header");\n                  console.log(headers);\n                  // for (var i = 0; i < headers.length; i++) {\n                  //   console.log("section height chages");\n                  //   headers[i].setAttribute(\n                  //     "style",\n                  //     "margin-top: 19.3333px; height: 48px; margin-bottom:10px"\n                  //   );\n                  // }\n                  articles = containerdocx.getElementsByTagName("article");\n                  console.log(articles);\n                  // for (var i = 0; i < articles.length; i++) {\n                  //   console.log("section height chages");\n                  //   articles[i].setAttribute("style", "margin-top: 48px; ");\n                  // }\n                  contentdocument = document.getElementsByClassName("docx-wrapper")[0].innerHTML;\n\n                  // console.log(contentdocument);\n                  _context4.next = 42;\n                  return fetch("http://localhost:5001/api/file/uploadFile", {\n                    method: "POST",\n                    headers: {\n                      "Content-Type": "application/json"\n                      // Authorization: "Bearer " + token,\n                    },\n                    body: JSON.stringify({\n                      htmlText: contentdocument,\n                      docId: "4",\n                      htmljson: extractHtmlToJson(document.getElementsByClassName("docx-wrapper")[0])\n                    })\n                  }).then(function (response) {\n                    return response.json();\n                  }).then(function (data) {\n                    // Handle the response from the backend\n                    console.log(data);\n                  });\n                case 42:\n                  _response2 = _context4.sent;\n                  _context4.next = 45;\n                  return fetch("http://localhost:5001/api/file/getFile/4", {\n                    method: "GET",\n                    headers: {\n                      "Content-Type": "application/json"\n                      // Authorization: "Bearer " + token,\n                    }\n                  }).then(function (response) {\n                    return response.json();\n                  }).then(function (data) {\n                    // Handle the response from the backend\n                    // console.log(data.data.data);\n                    document.getElementsByClassName("docx-wrapper")[0].innerHTML = data.data.data;\n                    htmljson = data.data.htmljson;\n                  });\n                case 45:\n                  response2 = _context4.sent;\n                  container = document.getElementsByClassName("docx-wrapper")[0];\n                  container.id = "docx-wrapper";\n                  imageLoaded();\n                  _context4.next = 54;\n                  break;\n                case 51:\n                  _context4.prev = 51;\n                  _context4.t0 = _context4["catch"](0);\n                  console.error("Error rendering DOCX:", _context4.t0);\n                case 54:\n                case "end":\n                  return _context4.stop();\n              }\n            }, _callee4, null, [[0, 51]]);\n          }));\n          return _renderDocx.apply(this, arguments);\n        };\n        renderDocx = function _renderDocx2(_x) {\n          return _renderDocx.apply(this, arguments);\n        };\n        extractHtmlToJson = function _extractHtmlToJson(divElement) {\n          var jsonOutput = {};\n          var htmlTags = divElement.getElementsByTagName("*");\n          console.log(htmlTags, "html");\n          for (var i = 0; i < htmlTags.length; i++) {\n            var tag = htmlTags[i];\n            var children = tag.children;\n            var childrens = tag.parentElement.children;\n            var position = -1; // Default position if tag is not found in its parent\'s children list\n\n            // Find the position of the tag within its parent\'s children\n            if (childrens) {\n              for (var j = 0; j < childrens.length; j++) {\n                if (childrens[j] === tag) {\n                  position = j;\n                  break;\n                }\n              }\n            }\n\n            // if (children.length === 0) {\n            // Check if the tag has no children\n            var tagId = tag.id;\n            var isImgTag = tag.tagName.toLowerCase() === "img";\n            var isLinkTag = tag.tagName.toLowerCase() === "a";\n            jsonOutput[tagId] = {\n              textContent: extractParentText(tag.id),\n              textcontentcombined: tag.textContent,\n              id: tagId,\n              parentId: tag.parentElement.id || "root",\n              style: tag.getAttribute("style") || "",\n              isTagImg: isImgTag,\n              isTagLink: isLinkTag,\n              "class": tag.className,\n              src: isImgTag ? tag.getAttribute("src") : "",\n              tagName: tag.tagName.toLowerCase(),\n              position: position\n            };\n          }\n          return jsonOutput;\n        };\n        removeTagButKeepChildren = function _removeTagButKeepChil(tagId) {\n          var tag = document.getElementById(tagId);\n          console.log(tag.id);\n          var parent = tag.parentNode;\n          if (parent.tagName.toLowerCase() == "article") {\n            tag.remove();\n          } else {\n            var children = [];\n            var childrens = tag.parentNode.childNodes;\n            console.log("dheeraj", childrens);\n            var position = -1; // Default position if tag is not found in its parent\'s children list\n\n            // Find the position of the tag within its parent\'s children\n            if (childrens) {\n              for (var j = 0; j < childrens.length; j++) {\n                if (childrens[j] === tag) {\n                  position = j;\n                  break;\n                }\n              }\n            }\n\n            // Move children to a temporary container\n            while (tag.firstChild) {\n              children.push(tag.removeChild(tag.firstChild));\n            }\n\n            // Remove the tag\n            parent.removeChild(tag);\n\n            // Append children back to the parent\n            for (var i = children.length - 1; i >= 0; i--) {\n              console.log(children[i]);\n              parent.insertBefore(children[i], childrens[position]);\n            }\n            // for (var i = 0; i < children.length; i++) {\n            //   console.log(children[i]);\n            //   parent.appendChild(children[i]);\n            // }\n            console.log("rithvik", parent);\n          }\n        };\n        extractParentText = function _extractParentText(parentId) {\n          var parentElement = document.getElementById(parentId);\n          // console.log(parentId);\n          var textContent = "";\n\n          // Iterate over child nodes\n          if (parentElement !== null && parentElement.childNodes.length > 0) {\n            for (var i = 0; i < parentElement.childNodes.length; i++) {\n              var childNode = parentElement.childNodes[i];\n              // Check if the node is a text node\n              if (childNode.nodeType === Node.TEXT_NODE) {\n                textContent += childNode.textContent;\n              }\n            }\n          } else {\n            textContent = parentElement.textContent;\n          }\n          return textContent;\n        };\n        _convertDocxToBlob = function _convertDocxToBlob3() {\n          _convertDocxToBlob = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n            var docxFilePath, _response, arrayBuffer, blob;\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n              while (1) switch (_context2.prev = _context2.next) {\n                case 0:\n                  docxFilePath = "/utils/sow2.docx";\n                  _context2.prev = 1;\n                  _context2.next = 4;\n                  return fetch(docxFilePath);\n                case 4:\n                  _response = _context2.sent;\n                  _context2.next = 7;\n                  return _response.arrayBuffer();\n                case 7:\n                  arrayBuffer = _context2.sent;\n                  blob = new Blob([arrayBuffer], {\n                    type: "application/vnd.openxmlformats-officedocument.wordprocessingml.document"\n                  });\n                  return _context2.abrupt("return", blob);\n                case 12:\n                  _context2.prev = 12;\n                  _context2.t0 = _context2["catch"](1);\n                  console.error("Error converting DOCX to Blob:", _context2.t0);\n                case 15:\n                case "end":\n                  return _context2.stop();\n              }\n            }, _callee2, null, [[1, 12]]);\n          }));\n          return _convertDocxToBlob.apply(this, arguments);\n        };\n        convertDocxToBlob = function _convertDocxToBlob2() {\n          return _convertDocxToBlob.apply(this, arguments);\n        };\n        document.getElementById("loading").style = "display:block";\n        localStorage.setItem("container-content-json", null);\n        document_version = [];\n        _context6.next = 16;\n        return fetch("http://localhost:5001/api/versioncontrol/getDocumentVersionsById?docId=4", {\n          method: "GET",\n          headers: {\n            "Content-Type": "application/json"\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          // Handle the response from the backend\n          console.log(data);\n          document_version = data.data;\n          var buttonContainer = document.getElementById("buttonContainer");\n          if (document_version != undefined) {\n            document_version.forEach(function (item) {\n              console.log(item);\n              // Create a button element\n              // const button = document.createElement("button");\n\n              // // Set button text to array item\n              // button.innerText = "revert " + item.id;\n              // button.className =\n              //   "text-white bg-purple-700 hover:bg-purple-800 focus:outline-none focus:ring-4 focus:ring-purple-300 font-medium rounded-full text-sm px-5 py-2.5 text-center mb-2 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900";\n\n              // // Add click event listener to the button\n              // button.addEventListener("click", () => {\n              //   const changes = item.delta;\n              //   const divElement = document.getElementById("docx-wrapper");\n              //   applyChangesFromV2toV1(divElement, htmljson, changes);\n              //   // Replace \'yourDivElementId\' with the actual ID of your div element\n              //   hideTextNodes(divElement);\n              // });\n\n              var button2 = document.createElement("button");\n\n              // Set button text to array item\n              button2.innerText = item.id;\n              button2.className = "text-white bg-purple-700 hover:bg-purple-800 focus:outline-none focus:ring-4 focus:ring-purple-300 font-medium rounded-full text-sm   px-10 py-3 text-center mb-2 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900";\n\n              // Add click event listener to the button\n              button2.addEventListener("click", function () {\n                var changes = item.delta;\n                var divElement = document.getElementById("docx-wrapper");\n                var firstv = document_version[0].delta;\n                applyChangesFromV1toV2(divElement, htmljson, changes, firstv);\n                removeemptyimage();\n              });\n\n              // Append the button to the container\n              // buttonContainer.appendChild(button);\n              buttonContainer.appendChild(button2);\n            });\n          }\n        });\n      case 16:\n        response = _context6.sent;\n        localStorage.setItem("container-content-json", null);\n        localStorage.setItem("version", 1);\n        localStorage.setItem("jsondetectedchanges", null);\n        localStorage.setItem("jsonchanges", null);\n        // localStorage.setItem("imageStyleOnload", null);\n        localStorage.removeItem("imageStyleOnload");\n        fileInput = document.querySelector("#files"); // Assuming you have a parent element\n        console.log("render_docx");\n        renderDocx();\n        document.getElementById("loading").style = "display:none";\n        console.log("render_docx");\n        // fileInput.addEventListener("change", (ev) => {\n        //   renderDocx(fileInput.files[0]);\n        //   // testDocuments.selectedIndex = 0;\n        // });\n        buttondd = document.getElementById("json");\n        buttondd.addEventListener("click", function () {\n          document.getElementById("loading").style = "display:block";\n          function detectChanges(_x2, _x3) {\n            return _detectChanges.apply(this, arguments);\n          }\n          function _detectChanges() {\n            _detectChanges = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(divElement, jsonResult) {\n              var articles, changes, dynamicImages, blobToBase64, h, image, blob, base64, htmlTags, i, tag, tagId, isImgTag, isLinkTag, tagInfo, parentId, parenttag, position, childnodeposition, childrens, childnodes, j, _j, textbefore, textafter, childElements, childIds, _i, childId, newTag, _tagId, response;\n              return _regeneratorRuntime().wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    articles = document.querySelectorAll("article");\n                    console.log(articles.length, "articcle length");\n                    if (articles.length > 1) {\n                      checkDivSizeBack();\n                      removeEmptyPages();\n                    }\n                    handleChanges();\n                    assignIDsToElements();\n                    changes = {\n                      changedTags: [],\n                      newTags: [],\n                      removedTags: [],\n                      imageTags: []\n                    };\n                    dynamicImages = document.getElementsByTagName("img");\n                    blobToBase64 = function blobToBase64(blob) {\n                      var reader = new FileReader();\n                      reader.readAsDataURL(blob);\n                      return new Promise(function (resolve) {\n                        reader.onloadend = function () {\n                          resolve(reader.result);\n                        };\n                      });\n                    };\n                    h = 0;\n                  case 9:\n                    if (!(h < dynamicImages.length)) {\n                      _context.next = 28;\n                      break;\n                    }\n                    image = dynamicImages[h];\n                    _context.next = 13;\n                    return fetch(image.src).then(function (response) {\n                      return response.blob();\n                    });\n                  case 13:\n                    blob = _context.sent;\n                    _context.next = 16;\n                    return blobToBase64(blob);\n                  case 16:\n                    base64 = _context.sent;\n                    imagesposition[h].x2 = image.offsetLeft;\n                    imagesposition[h].y2 = image.offsetTop;\n                    imagesposition[h].width = image.offsetWidth;\n                    imagesposition[h].height = image.offsetHeight;\n                    imagesposition[h].style = image.style.cssText;\n                    imagesposition[h].src = base64;\n                    imagesposition[h].id = image.id;\n                    imagesposition[h].parent = image.parentElement.parentElement.id;\n                  case 25:\n                    h++;\n                    _context.next = 9;\n                    break;\n                  case 28:\n                    changes.imageTags = imagesposition;\n                    htmlTags = divElement.getElementsByTagName("*");\n                    console.log(htmlTags);\n                    i = 0;\n                  case 32:\n                    if (!(i < htmlTags.length)) {\n                      _context.next = 84;\n                      break;\n                    }\n                    tag = htmlTags[i];\n                    tagId = tag.id;\n                    isImgTag = tag.tagName.toLowerCase() === "img";\n                    isLinkTag = tag.tagName.toLowerCase() === "a";\n                    tagInfo = jsonResult[tagId];\n                    if (tagInfo) {\n                      _context.next = 80;\n                      break;\n                    }\n                    // if (tag.children.length === 0) {\n                    console.log("here");\n                    console.log(tag);\n                    // New tag found\n                    parentId = tag.parentElement.id || "di";\n                    parenttag = document.getElementById(tag.parentElement.id);\n                    console.log(tag.parentElement);\n                    position = -1;\n                    childnodeposition = -1;\n                    if (!(tag.parentElement != null)) {\n                      _context.next = 67;\n                      break;\n                    }\n                    childrens = tag.parentElement.children;\n                    childnodes = tag.parentElement.childNodes; // Default position if tag is not found in its parent\'s children list\n                    // Find the position of the tag within its parent\'s children\n                    if (!childrens) {\n                      _context.next = 58;\n                      break;\n                    }\n                    j = 0;\n                  case 51:\n                    if (!(j < childrens.length)) {\n                      _context.next = 58;\n                      break;\n                    }\n                    if (!(childrens[j] === tag)) {\n                      _context.next = 55;\n                      break;\n                    }\n                    position = j;\n                    return _context.abrupt("break", 58);\n                  case 55:\n                    j++;\n                    _context.next = 51;\n                    break;\n                  case 58:\n                    if (!childnodes) {\n                      _context.next = 67;\n                      break;\n                    }\n                    _j = 0;\n                  case 60:\n                    if (!(_j < childnodes.length)) {\n                      _context.next = 67;\n                      break;\n                    }\n                    if (!(childnodes[_j] === tag)) {\n                      _context.next = 64;\n                      break;\n                    }\n                    childnodeposition = _j;\n                    return _context.abrupt("break", 67);\n                  case 64:\n                    _j++;\n                    _context.next = 60;\n                    break;\n                  case 67:\n                    textbefore = void 0;\n                    textafter = void 0;\n                    console.log(tag.parentElement, "hello world!");\n                    if (tag.parentElement && tag.parentElement.childNodes) {\n                      console.log("hello world!");\n                      textbefore = childnodeposition - 1 >= 0 ? tag.parentElement.childNodes[childnodeposition - 1].nodeValue : null;\n                      textafter = childnodeposition + 1 < tag.parentElement.childNodes.length ? tag.parentElement.childNodes[childnodeposition + 1].nodeValue : null;\n                    }\n                    console.log(tag.children, "hello hello");\n                    childElements = tag.children;\n                    childIds = [];\n                    for (_i = 0; _i < childElements.length; _i++) {\n                      childId = childElements[_i].id;\n                      if (childId) {\n                        childIds.push(childId);\n                      }\n                    }\n                    newTag = {\n                      id: tagId,\n                      parentId: parentId,\n                      tagName: tag.tagName.toLowerCase(),\n                      textContent: extractParentText(tagId),\n                      "class": tag.getAttribute("class") || "",\n                      style: tag.getAttribute("style") || "",\n                      isTagImg: isImgTag,\n                      position: position,\n                      textafter: textafter || "",\n                      textbefore: textbefore || "",\n                      className: tag.className || "",\n                      isTagLink: isLinkTag,\n                      src: isImgTag ? tag.getAttribute("src") : "",\n                      children: childIds,\n                      color: tag.getAttribute("color") || "",\n                      size: tag.getAttribute("size") || "",\n                      face: tag.getAttribute("face") || "",\n                      // childArray: childNodesMap,\n                      // parentchildNodes: tag.parentNode.childNodes,\n                      childnodeposition: childnodeposition\n                    };\n                    changes.newTags.push(newTag);\n                    console.log(jsonResult[parenttag.id], "parent");\n                    // if (jsonResult[parenttag.id] !== undefined) {\n                    //   // changes.changedTags.push({\n                    //   //   id: parenttag.id,\n                    //   //   textContent: newTag.textContent,\n                    //   //   textcontentfromjson: jsonResult[parenttag.id].textcontentcombined,\n                    //   //   style: jsonResult[parenttag.id].style,\n                    //   //   src: jsonResult[parenttag.id].isImgTag\n                    //   //     ? jsonResult[parenttag.id].isImgTag\n                    //   //     : "",\n                    //   //   isParentToNewTag: true,\n                    //   // });\n                    //   // }\n                    // }\n                    _context.next = 81;\n                    break;\n                  case 80:\n                    // Check for changes in text style or image source\n                    if (tag.children.length === 0 && tag.tagName.toLowerCase() !== "style") {\n                      if (tagInfo.textContent !== extractParentText(tag.id)) {\n                        changes.changedTags.push({\n                          id: tagId,\n                          textContent: extractParentText(tag.id)\n                        });\n                      }\n                      if (tagInfo.style !== tag.getAttribute("style")) {\n                        changes.changedTags.push({\n                          id: tagId,\n                          style: tag.getAttribute("style") || ""\n                        });\n                      }\n                      if (tagInfo.isTagImg && tagInfo.src !== tag.getAttribute("src")) {\n                        changes.changedTags.push({\n                          id: tagId,\n                          src: isImgTag ? tag.getAttribute("src") : ""\n                        });\n                      }\n                    }\n                  case 81:\n                    i++;\n                    _context.next = 32;\n                    break;\n                  case 84:\n                    for (_tagId in jsonResult) {\n                      if (!divElement.querySelector("#".concat(_tagId))) {\n                        changes.removedTags.push(_tagId);\n                      }\n                    }\n                    localStorage.setItem("jsondetectedchanges", JSON.stringify(changes));\n                    response = fetch("http://localhost:5001/api/versioncontrol/createDocumentVersion", {\n                      method: "POST",\n                      headers: {\n                        "Content-Type": "application/json"\n                      },\n                      body: JSON.stringify({\n                        version_number: version,\n                        doc_id: 4,\n                        delta: changes\n                      })\n                    }).then(function (response) {\n                      return response.json();\n                    }).then(function (data) {\n                      // Handle the response from the backend\n                      console.log(data);\n                      localStorage.setItem("version", version);\n                      document.getElementById("loading").style = "display:none";\n                      window.location.reload();\n                    });\n                    return _context.abrupt("return", changes);\n                  case 88:\n                  case "end":\n                    return _context.stop();\n                }\n              }, _callee);\n            }));\n            return _detectChanges.apply(this, arguments);\n          }\n          var divElement = document.getElementsByClassName("docx-wrapper")[0];\n          var version = parseInt(localStorage.getItem("version"));\n          var changes = detectChanges(divElement, htmljson);\n          console.log("version: " + version);\n          if (version == NaN) {\n            version = 1;\n          }\n          version = version + 0.1;\n          console.log(changes, version, 1);\n          console.log(changes);\n        });\n\n        // Function to apply changes from v1 to v2\n\n        // Function to apply changes from v2 to v1\n\n        // Example usage:\n        // Assuming you have divElement, v1, and v2 from previous steps\n        // Applying changes from v1 to v2\n        v2tov1 = document.getElementById("v2tov1");\n        v2tov1.addEventListener("click", function () {\n          var changes = JSON.parse(localStorage.getItem("jsondetectedchanges"));\n          var divElement = document.getElementsByClassName("docx-wrapper")[0];\n          applyChangesFromV2toV1(divElement, htmljson, changes);\n          removeemptyimage();\n        });\n        // const v1tov2 = document.getElementById("v1tov2");\n        // // v1tov2.addEventListener("click", function () {\n        // //   const changes = JSON.parse(localStorage.getItem("jsondetectedchanges"));\n        // //   const divElement = document.getElementsByClassName("docx-wrapper")[0];\n        // //   applyChangesFromV1toV2(divElement, htmljson.htmljson, changes);\n        // // });\n\n        // Applying changes from v2 to v1\n      case 31:\n      case "end":\n        return _context6.stop();\n    }\n  }, _callee6);\n})));\nvar changesx = 1;\nvar version = 1;\nvar currentNearestElement = null;\nfunction assignIDsToElements() {\n  var container = document.getElementsByClassName("docx-wrapper")[0];\n  container.id = "docx-wrapper";\n  var elementsWithoutID = container.querySelectorAll("*:not([id])");\n  elementsWithoutID.forEach(function (element, index) {\n    element.id = "generatedID_".concat(version, "_changes_").concat(changesx);\n    // console.log("tag", element.tagName);\n    changesx++;\n    // parentelement = document.getElementById(element.parentElement.id).innerHTML;\n    // parentelementlength = document.getElementById(element.parentElement.id)\n    //   .innerHTML.length;\n    // console.log("parentelement", parentelement);\n    // console.log(`<${element.tagName.toLowerCase()}>`, "btag");\n    // var indexOfBoldTag = parentelement.indexOf(\n    //   `<${element.tagName.toLowerCase()}`\n    // );\n    // console.log(element.innerHTML);\n\n    // const position = {\n    //   elementcc: element,\n    //   isNewElement: true,\n    //   insertedText: null,\n    //   nearestElement: element.id,\n    //   element: element.outerHTML,\n    //   parentelement: element.parentElement.id,\n    //   parentelementlength: parentelementlength,\n    //   startOffset: indexOfBoldTag,\n    //   tagname: element.tagName.toLowerCase(),\n    //   datalength: element.innerHTML.length,\n    //   data: element.innerHTML,\n    // };\n\n    // textData.push(position);\n\n    // console.log("New Element Added", position);\n\n    // // Store textData in JSON format\n    // const jsonData = JSON.stringify(textData);\n    // localStorage.setItem("jsonchanges", jsonData);\n    // console.log("JSON Data:", jsonData);\n  });\n}\nfunction handleChanges() {\n  console.log("tapas");\n  var editableDiv = document.getElementsByClassName("docx-wrapper")[0];\n  var elementsWithIds = editableDiv.querySelectorAll("[id]");\n  var idSet = new Set();\n  elementsWithIds.forEach(function (element) {\n    var id = element.id;\n    if (idSet.has(id)) {\n      // If duplicate found, change the ID\n      // console.log(id);\n      var newId;\n      do {\n        newId = "generatedID_".concat(version, "_changes_").concat(changesx); // Appending random number to ensure uniqueness\n        changesx++;\n      } while (idSet.has(newId)); // Check if new ID is unique\n      element.id = newId;\n    }\n    idSet.add(element.id);\n  });\n}\ndocument.getElementById("container-content").addEventListener("mouseup", handleChanges);\ndocument.getElementById("container-content").addEventListener("keyup", handleChanges);\n\n// document\n//   .getElementById("container-content")\n//   .addEventListener("input", handleChanges);\n\ndocument.getElementById("container-content").addEventListener("input", checkDivSize);\ndocument.getElementById("container-content").addEventListener("input", imageLoaded, assignIDsToElements, handleChanges);\n// document.addEventListener("keydown", function (event) {\n//   // Check if the Control key and the "v" key are pressed simultaneously\n//   if (event.ctrlKey && event.key === "v") {\n//     // Run your function here\n//     removeEmptyPages();\n//   }\n// // });\ndocument.getElementById("container-content").addEventListener("input", function (event) {\n  // Check if the input event was triggered by pressing the backspace or delete key\n  if (event.inputType === "deleteContentBackward" || event.inputType === "deleteContentForward") {\n    checkDivSizeBack();\n  }\n});\nfunction setIdToNull(node) {\n  // Set the id attribute of the current node to null\n  node.id = null;\n\n  // Recursively call setIdToNull for each child node\n  for (var i = 0; i < node.childNodes.length; i++) {\n    setIdToNull(node.childNodes[i]);\n  }\n}\nfunction hideTextNodes(node) {\n  console.log("Hiding text nodes", node.childNodes);\n  // Iterate over each child node of the given node\n  for (var i = node.childNodes.length - 1; i >= 0; i--) {\n    var child = node.childNodes[i];\n\n    // Check if the child node is not a section element\n    if (child.nodeName !== "SECTION") {\n      // Remove the child node\n      node.removeChild(child);\n    }\n  }\n}\nfunction removearticlewhileloop(articleHeight, article, i) {\n  var index = 0;\n  var totalarticles = document.getElementsByTagName("article");\n  while (842 < articleHeight && totalarticles.length > i + 1 && index < 100) {\n    console.log("removearticlewhileloop");\n    index += 1;\n    pages = document.getElementsByClassName("docx");\n    var nextarticle = document.getElementsByTagName("article")[i + 1];\n    article.lastChild.id = null;\n    setIdToNull(article.lastChild);\n    assignIDsToElements();\n    nextarticle.insertBefore(article.lastChild, nextarticle.firstChild);\n    article = document.getElementById(article.id);\n    articleHeight = article.scrollHeight;\n    console.log("done on while loop");\n  }\n}\nfunction addarticlewhileloop(articleHeight, article, i) {\n  var totalarticles = document.getElementsByTagName("article");\n  console.log(article, "kid");\n  var index = 0;\n  while (842 > articleHeight && totalarticles.length > i + 1 && index < 100) {\n    // console.log(document.getElementsByTagName("article")[i]);\n    // console.log(document.getElementsByTagName("article")[i + 1]);\n    index += 1;\n    if (totalarticles.length > i + 1) {\n      var beforearticle = document.getElementsByTagName("article")[i + 1];\n      if (beforearticle.firstChild) {\n        beforearticle.firstChild.id = null;\n        setIdToNull(beforearticle.firstChild);\n        assignIDsToElements();\n        article.appendChild(beforearticle.firstChild);\n        article = document.getElementsByTagName("article")[i];\n        articleHeight = article.scrollHeight;\n      }\n    }\n  }\n}\nfunction checkDivSize() {\n  console.log("Checking container size");\n  var editableDiv = document.getElementsByClassName("docx-wrapper")[0];\n  var pages = document.getElementsByClassName("docx");\n  for (var i = 0; i < pages.length; i++) {\n    console.log(pages[i].id, "dev");\n    var element = pages[i];\n    var containerHeight = pages[i].clientHeight;\n    var contentHeight = pages[i].scrollHeight;\n    console.log("print");\n    console.log(containerHeight, contentHeight, "first");\n    console.log(pages[i].id, "dev yes");\n    if (i + 1 < pages.length) {\n      var article = document.getElementsByTagName("article")[i];\n      var articleHeight = article.scrollHeight;\n      console.log("removearticlewhileloop first");\n      removearticlewhileloop(articleHeight, article, i);\n      article.clientHeight = 842;\n      article.scrollHeight = 842;\n    } else {\n      var _article = document.getElementsByTagName("article")[i];\n      var _articleHeight = _article.scrollHeight;\n      while (842 < _articleHeight) {\n        console.log("removearticlewhileloop add page");\n        var newpage = document.createElement("section");\n        newpage.classList.add("docx");\n        newpage.setAttribute("style", "padding: 20.15pt 59.15pt 72pt 72pt; width: 595pt; height: 842pt;");\n        newpage.id = "new_page_" + Math.random() * 1000;\n        var newheader = document.createElement("header");\n        newheader.setAttribute("style", "margin-top: calc(-19.3333px); min-height: calc(19.3333px);");\n        var newfooter = document.createElement("footer");\n        newfooter.setAttribute("style", "margin-bottom: calc(-96px); min-height: calc(96px);");\n        var newarticle = document.createElement("article");\n        newpage.appendChild(newheader);\n        newpage.appendChild(newarticle);\n        newpage.appendChild(newfooter);\n        editableDiv.appendChild(newpage);\n        newarticle.appendChild(_article.lastChild);\n        _article.lastChild.remove();\n        _articleHeight = _article.scrollHeight;\n        removearticlewhileloop(_article, _articleHeight, i);\n        _article.clientHeight = 842;\n        _article.scrollHeight = 842;\n      }\n    }\n\n    // editableDiv.appendChild(newpage);\n  }\n  // checkclientheightofarticles();\n  removeEmptyPages();\n}\nfunction imageLoaded() {\n  imagesposition = [];\n  var dynamicImages = document.querySelectorAll("img");\n  console.log(dynamicImages);\n  console.log("images");\n  var existingHandles = document.querySelectorAll(".resize-handle");\n  console.log(existingHandles, "rahul");\n  if (existingHandles.length > 0) {\n    console.log("hell dev");\n    existingHandles.forEach(function (handle) {\n      handle.remove();\n    });\n  }\n  // const existingcontainer = document.querySelectorAll(".image-container");\n  // if (existingcontainer.length > 0) {\n  //   existingcontainer.forEach((handle) => {\n  //     handle.remove();\n  //   });\n  // }\n  dynamicImages.forEach(function (image, index) {\n    image.style.zIndex = 100;\n    var container = document.createElement("div");\n    container.classList.add("image-container");\n    container.classList.add("container");\n    container.style = "display: inline-block; position:relative;";\n    image.parentNode.insertBefore(container, image);\n    container.appendChild(image);\n    var resizeHandles = ["top-left", "top-right", "bottom-left", "bottom-right"].map(function (handleClass) {\n      var handle = document.createElement("div");\n      handle.classList.add("resize-handle", handleClass);\n      container.appendChild(handle);\n      return handle;\n    });\n    console.log(image.parentElement, "exsq image");\n    imagesposition.push({\n      x: image.offsetLeft,\n      y: image.offsetTop,\n      width: image.offsetWidth,\n      height: image.offsetHeight,\n      style: image.style.cssText,\n      src: image.src,\n      id: image.id,\n      x2: image.offsetLeft,\n      y2: image.offsetTop,\n      width2: image.offsetWidth,\n      height2: image.offsetHeight,\n      style2: image.style.cssText,\n      parent: image.parentElement.parentElement.id\n    });\n    var initialX,\n      initialY,\n      offsetX = 0,\n      offsetY = 0;\n    var initialWidth, initialHeight;\n\n    // Event listener for mousedown event on the image and resize handles\n    image.addEventListener("mousedown", startDrag);\n    resizeHandles.forEach(function (handle) {\n      return handle.addEventListener("mousedown", startResize);\n    });\n\n    // Function to handle dragging\n    function startDrag(e) {\n      e.preventDefault();\n      initialX = e.clientX - offsetX;\n      initialY = e.clientY - offsetY;\n      document.addEventListener("mousemove", drag);\n      document.addEventListener("mouseup", stopDrag);\n    }\n\n    // Function to handle resizing\n    function startResize(e) {\n      console.log("startResize");\n      e.preventDefault();\n      initialWidth = image.offsetWidth;\n      initialHeight = image.offsetHeight;\n      initialX = e.clientX;\n      initialY = e.clientY;\n      document.addEventListener("mousemove", resize);\n      document.addEventListener("mouseup", stopResize);\n    }\n\n    // Function to drag the image\n    function drag(e) {\n      console.log("drag");\n      e.preventDefault();\n      offsetX = e.clientX - initialX;\n      offsetY = e.clientY - initialY;\n      initialX = e.clientX;\n      initialY = e.clientY;\n\n      // Update the position of the image\n      image.style.left = "".concat(image.offsetLeft + offsetX, "px");\n      image.style.top = "".concat(image.offsetTop + offsetY, "px");\n\n      // Update the position of the container\n      container.style.left = "".concat(container.offsetLeft + offsetX, "px");\n      container.style.top = "".concat(container.offsetTop + offsetY, "px");\n\n      // Update the position of resize handles\n      resizeHandles.forEach(function (handle) {\n        handle.style.left = "".concat(handle.offsetLeft + offsetX, "px");\n        handle.style.top = "".concat(handle.offsetTop + offsetY, "px");\n      });\n    }\n\n    // Function to resize the image\n    function resize(e) {\n      console.log(e);\n      e.preventDefault();\n      var newWidth = initialWidth + (e.clientX - initialX);\n      var newHeight = initialHeight + (e.clientY - initialY);\n      image.style.width = "".concat(newWidth, "px");\n      image.style.height = "".concat(newHeight, "px");\n      container.style.width = "".concat(newWidth, "px");\n      container.style.height = "".concat(newHeight, "px");\n      // resizeHandles.forEach((handle) => {\n      //   handle.style.left = `${handle.offsetLeft + offsetX}px`;\n      //   handle.style.top = `${handle.offsetTop + offsetY}px`;\n      // });\n\n      // Update the position of resize handles\n      // resizeHandles.forEach((handle) => {\n      //   handle.style.width = `${newWidth}px`;\n      //   handle.style.height = `${newHeight}px`;\n      // });\n    }\n\n    // Functions to stop dragging and resizing\n    function stopDrag() {\n      document.removeEventListener("mousemove", drag);\n      document.removeEventListener("mouseup", stopDrag);\n    }\n    function stopResize() {\n      document.removeEventListener("mousemove", resize);\n      document.removeEventListener("mouseup", stopResize);\n    }\n  });\n}\nfunction checkDivSizeBack() {\n  console.log("Checking container size");\n  var editableDiv = document.getElementsByClassName("docx-wrapper")[0];\n  var pages = document.getElementsByClassName("docx");\n  for (var i = 0; i < pages.length; i++) {\n    console.log(pages[i].id, "dev");\n    var element = pages[i];\n    var containerHeight = pages[i].clientHeight;\n    var contentHeight = pages[i].scrollHeight;\n    console.log("print");\n    console.log(containerHeight, contentHeight, "first");\n    console.log(pages[i].id, "dev yes");\n    // if (i + 1 < pages.length) {\n    //   let article = document.getElementsByTagName("article")[i];\n    //   let articleHeight = article.scrollHeight;\n    //   addarticlewhileloop(articleHeight, article, i);\n    //   article.clientHeight = 842;\n    //   article.scrollHeight = 842;\n    // } else {\n    var article = document.getElementsByTagName("article")[i];\n    var articleHeight = article.scrollHeight;\n    addarticlewhileloop(articleHeight, article, i);\n    article.clientHeight = 842;\n    article.scrollHeight = 842;\n\n    // editableDiv.appendChild(newpage);\n  }\n  // const articles = document.querySelectorAll("article");\n  // console.log(articles.length, "articcle length");\n  // if (articles.length > 1) {\n  removeEmptyPages();\n\n  // checkclientheightofarticles();\n}\nfunction removeEmptyPages() {\n  var articles = document.querySelectorAll("article");\n  // console.log(articles.length, "articcle length");\n  // if (articles.length > 1) {\n  //   console.log(articles.length, "articcle length");\n  articles.forEach(function (article) {\n    // Check if the article has no child nodes or just a single p tag\n    if (article.childNodes.length === 0 || article.childNodes.length === 1 && article.firstChild.tagName.toLowerCase() === "p") {\n      // Remove the parent section tag\n      var section = article.parentNode;\n      section.parentNode.removeChild(section);\n    }\n  });\n\n  // Iterate through each article\n}\nfunction removeemptyimage() {\n  var images = document.querySelectorAll(".image-container");\n  images.forEach(function (image) {\n    if (image.childNodes.length === 0) {\n      image.remove();\n    }\n  });\n}\n\n//# sourceURL=webpack://ipvms-frontend/./dist/src/scripts/versioncontrol.js?'
        );

        /***/
      },

    /******/
  };
  /************************************************************************/
  /******/ // The require scope
  /******/ var __webpack_require__ = {};
  /******/
  /************************************************************************/
  /******/ /* webpack/runtime/make namespace object */
  /******/ (() => {
    /******/ // define __esModule on exports
    /******/ __webpack_require__.r = (exports) => {
      /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
        /******/ Object.defineProperty(exports, Symbol.toStringTag, {
    value: "Module",
  });
        /******/
      }
      /******/ Object.defineProperty(exports, "__esModule", { value: true });
      /******/
    };
    /******/
  })();
  /******/
  /************************************************************************/
  /******/
  /******/ // startup
  /******/ // Load entry module and return exports
  /******/ // This entry module can't be inlined because the eval devtool is used.
  /******/ var __webpack_exports__ = {};
  /******/ __webpack_modules__["./dist/src/scripts/versioncontrol.js"](
    0,
    __webpack_exports__,
    __webpack_require__
  );
  /******/
  /******/
})();
